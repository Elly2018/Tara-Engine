#pragma once
#include "shader_enum.h"

namespace Tara {
	std::map<ShaderType, std::string> Shadertype_string = {
		{ShaderType::Vertex, "VERTEX"},
		{ShaderType::Tessellation, "TESSELLATION"},
		{ShaderType::Fragment, "FRAGMENT"},
		{ShaderType::Geometry, "GEOMETRY"},
		{ShaderType::Compute, "COMPUTE"}
	};
	std::map<ShaderType, int32_t> shadertype_target{
		{ShaderType::Vertex, GL_VERTEX_SHADER},
		{ShaderType::Tessellation, GL_TESS_CONTROL_SHADER},
		{ShaderType::Fragment, GL_FRAGMENT_SHADER},
		{ShaderType::Geometry, GL_GEOMETRY_SHADER},
		{ShaderType::Compute, GL_COMPUTE_SHADER}
	};
	std::map<ShaderUniformType, uint32_t> uniformMap = {
		{ShaderUniformType::Float, GL_FLOAT},
		{ShaderUniformType::Double, GL_DOUBLE},
		{ShaderUniformType::Int, GL_INT},
		{ShaderUniformType::Int, GL_UNSIGNED_INT},
		{ShaderUniformType::Bool, GL_BOOL},

		{ShaderUniformType::Vec2, GL_FLOAT_VEC2},
		{ShaderUniformType::Vec3, GL_FLOAT_VEC3},
		{ShaderUniformType::Vec4, GL_FLOAT_VEC4},
		{ShaderUniformType::BVec2, GL_BOOL_VEC2},
		{ShaderUniformType::BVec3, GL_BOOL_VEC3},
		{ShaderUniformType::BVec4, GL_BOOL_VEC4},
		{ShaderUniformType::DVec2, GL_DOUBLE_VEC2},
		{ShaderUniformType::DVec3, GL_DOUBLE_VEC3},
		{ShaderUniformType::DVec4, GL_DOUBLE_VEC4},
		{ShaderUniformType::IVec2, GL_INT_VEC2},
		{ShaderUniformType::IVec3, GL_INT_VEC3},
		{ShaderUniformType::IVec4, GL_INT_VEC4},
		{ShaderUniformType::UVec2, GL_UNSIGNED_INT_VEC2},
		{ShaderUniformType::UVec3, GL_UNSIGNED_INT_VEC3},
		{ShaderUniformType::UVec4, GL_UNSIGNED_INT_VEC4},

		{ShaderUniformType::Mat2, GL_FLOAT_MAT2},
		{ShaderUniformType::Mat3, GL_FLOAT_MAT3},
		{ShaderUniformType::Mat4, GL_FLOAT_MAT4},
		{ShaderUniformType::Mat2x3, GL_FLOAT_MAT2x3},
		{ShaderUniformType::Mat2x4, GL_FLOAT_MAT2x4},
		{ShaderUniformType::Mat3x2, GL_FLOAT_MAT3x2},
		{ShaderUniformType::Mat3x4, GL_FLOAT_MAT3x4},
		{ShaderUniformType::Mat4x2, GL_FLOAT_MAT4x2},
		{ShaderUniformType::Mat4x3, GL_FLOAT_MAT4x3},
		{ShaderUniformType::DMat2, GL_DOUBLE_MAT2},
		{ShaderUniformType::DMat3, GL_DOUBLE_MAT3},
		{ShaderUniformType::DMat4, GL_DOUBLE_MAT4},
		{ShaderUniformType::DMat2x3, GL_DOUBLE_MAT2x3},
		{ShaderUniformType::DMat2x4, GL_DOUBLE_MAT2x4},
		{ShaderUniformType::DMat3x2, GL_DOUBLE_MAT3x2},
		{ShaderUniformType::DMat3x4, GL_DOUBLE_MAT3x4},
		{ShaderUniformType::DMat4x2, GL_DOUBLE_MAT4x2},
		{ShaderUniformType::DMat4x3, GL_DOUBLE_MAT4x3},

		{ShaderUniformType::Texture1D, GL_SAMPLER_1D},
		{ShaderUniformType::Texture2D, GL_SAMPLER_2D},
		{ShaderUniformType::Texture3D, GL_SAMPLER_3D},
		{ShaderUniformType::TextureCube, GL_SAMPLER_CUBE},
		{ShaderUniformType::Texture1DShadow, GL_SAMPLER_1D_SHADOW},
		{ShaderUniformType::Texture2DShadow, GL_SAMPLER_2D_SHADOW},
		{ShaderUniformType::Texture1DArray, GL_SAMPLER_1D_ARRAY},
		{ShaderUniformType::Texture2DArray, GL_SAMPLER_2D_ARRAY},
		{ShaderUniformType::Texture2DRect, GL_SAMPLER_2D_RECT},
		{ShaderUniformType::Texture2DRectShadow, GL_SAMPLER_2D_RECT_SHADOW},
		{ShaderUniformType::Texture2DMultisample, GL_SAMPLER_2D_MULTISAMPLE},
		{ShaderUniformType::Texture2DMultisampleArray, GL_SAMPLER_2D_MULTISAMPLE_ARRAY},
		{ShaderUniformType::Texture1DShadowArray, GL_SAMPLER_1D_ARRAY_SHADOW},
		{ShaderUniformType::Texture2DShadowArray, GL_SAMPLER_2D_ARRAY_SHADOW},
		{ShaderUniformType::ITexture1D, GL_INT_SAMPLER_1D},
		{ShaderUniformType::ITexture2D, GL_INT_SAMPLER_2D},
		{ShaderUniformType::ITexture3D, GL_INT_SAMPLER_3D},
		{ShaderUniformType::ITextureCube, GL_INT_SAMPLER_CUBE},
		{ShaderUniformType::ITexture1DArray, GL_INT_SAMPLER_1D_ARRAY},
		{ShaderUniformType::ITexture2DArray, GL_INT_SAMPLER_2D_ARRAY},
		{ShaderUniformType::ITexture2DRect, GL_INT_SAMPLER_2D_RECT},
		{ShaderUniformType::ITexture2DMultisample, GL_INT_SAMPLER_2D_MULTISAMPLE},
		{ShaderUniformType::ITexture2DMultisampleArray, GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY},
		{ShaderUniformType::UTexture1D, GL_UNSIGNED_INT_SAMPLER_1D},
		{ShaderUniformType::UTexture2D, GL_UNSIGNED_INT_SAMPLER_2D},
		{ShaderUniformType::UTexture3D, GL_UNSIGNED_INT_SAMPLER_3D},
		{ShaderUniformType::UTextureCube, GL_UNSIGNED_INT_SAMPLER_CUBE},
		{ShaderUniformType::UTexture1DArray, GL_UNSIGNED_INT_SAMPLER_1D_ARRAY},
		{ShaderUniformType::UTexture2DArray, GL_UNSIGNED_INT_SAMPLER_2D_ARRAY},
		{ShaderUniformType::UTexture2DRect, GL_UNSIGNED_INT_SAMPLER_2D_RECT},
		{ShaderUniformType::UTexture2DMultisample, GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE},
		{ShaderUniformType::UTexture2DMultisampleArray, GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY},
	};
	std::map<ShaderUniformType, const char*> uniformString = {
		{ShaderUniformType::Float, "float"},
		{ShaderUniformType::Double, "double"},
		{ShaderUniformType::Int, "int"},
		{ShaderUniformType::UInt, "unsigned int"},
		{ShaderUniformType::Bool, "bool"},

		{ShaderUniformType::Vec2, "vec2"},
		{ShaderUniformType::Vec3, "vec3"},
		{ShaderUniformType::Vec4, "vec4"},
		{ShaderUniformType::BVec2, "bvec2"},
		{ShaderUniformType::BVec3, "bvec3"},
		{ShaderUniformType::BVec4, "bvec4"},
		{ShaderUniformType::DVec2, "dvec2"},
		{ShaderUniformType::DVec3, "dvec3"},
		{ShaderUniformType::DVec4, "dvec4"},
		{ShaderUniformType::IVec2, "ivec2"},
		{ShaderUniformType::IVec3, "ivec3"},
		{ShaderUniformType::IVec4, "ivec4"},
		{ShaderUniformType::UVec2, "uvec2"},
		{ShaderUniformType::UVec3, "uvec3"},
		{ShaderUniformType::UVec4, "uvec4"},

		{ShaderUniformType::Mat2, "mat2"},
		{ShaderUniformType::Mat3, "mat3"},
		{ShaderUniformType::Mat4, "mat4"},
		{ShaderUniformType::Mat2x3, "mat2x3"},
		{ShaderUniformType::Mat2x4, "mat2x4"},
		{ShaderUniformType::Mat3x2, "mat3x2"},
		{ShaderUniformType::Mat3x4, "mat3x4"},
		{ShaderUniformType::Mat4x2, "mat4x2"},
		{ShaderUniformType::Mat4x3, "mat4x3"},
		{ShaderUniformType::DMat2, "mat2"},
		{ShaderUniformType::DMat3, "dmat3"},
		{ShaderUniformType::DMat4, "dmat4"},
		{ShaderUniformType::DMat2x3, "dmat2x3"},
		{ShaderUniformType::DMat2x4, "dmat2x4"},
		{ShaderUniformType::DMat3x2, "dmat3x2"},
		{ShaderUniformType::DMat3x4, "dmat3x4"},
		{ShaderUniformType::DMat4x2, "dmat4x2"},
		{ShaderUniformType::DMat4x3, "dmat4x3"},

		{ShaderUniformType::Texture1D, "sampler1D"},
		{ShaderUniformType::Texture2D, "sampler2D"},
		{ShaderUniformType::Texture3D, "sampler3D"},
		{ShaderUniformType::TextureCube, "samplerCube"},
		{ShaderUniformType::Texture1DShadow, "sampler1DShadow"},
		{ShaderUniformType::Texture2DShadow, "sampler2DShadow"},
		{ShaderUniformType::Texture1DArray, "sampler1DArray"},
		{ShaderUniformType::Texture2DArray, "sampler2DArray"},
		{ShaderUniformType::Texture2DRect, "sampler2DRect"},
		{ShaderUniformType::Texture2DRectShadow, "sampler2DRectShadow"},
		{ShaderUniformType::Texture2DMultisample, "sampler2DMS"},
		{ShaderUniformType::Texture2DMultisampleArray, "sampler2DMSArray"},
		{ShaderUniformType::Texture1DShadowArray, "sampler1DArrayShadow"},
		{ShaderUniformType::Texture2DShadowArray, "sampler2DArrayShadow"},
		{ShaderUniformType::ITexture1D, "isampler1D"},
		{ShaderUniformType::ITexture2D, "isampler2D"},
		{ShaderUniformType::ITexture3D, "isampler3D"},
		{ShaderUniformType::ITextureCube, "isamplerCube"},
		{ShaderUniformType::ITexture1DArray, "isampler1DArray"},
		{ShaderUniformType::ITexture2DArray, "isampler2DArray"},
		{ShaderUniformType::ITexture2DRect, "isampler2DRect"},
		{ShaderUniformType::ITexture2DMultisample, "isampler2DMS"},
		{ShaderUniformType::ITexture2DMultisampleArray, "isampler2DMSArray"},
		{ShaderUniformType::UTexture1D, "usampler1D"},
		{ShaderUniformType::UTexture2D, "usampler2D"},
		{ShaderUniformType::UTexture3D, "usampler3D"},
		{ShaderUniformType::UTextureCube, "usamplerCube"},
		{ShaderUniformType::UTexture1DArray, "usampler1DArray"},
		{ShaderUniformType::UTexture2DArray, "usampler2DArray"},
		{ShaderUniformType::UTexture2DRect, "usampler2DRect"},
		{ShaderUniformType::UTexture2DMultisample, "usampler2DMS"},
		{ShaderUniformType::UTexture2DMultisampleArray, "usampler2DMSArray"},
	};
	std::map<ShaderUniformType, size_t> uniformSize = {
		{ShaderUniformType::Float, sizeof(float_t)},
		{ShaderUniformType::Double, sizeof(double_t)},
		{ShaderUniformType::Int, sizeof(int32_t)},
		{ShaderUniformType::UInt, sizeof(uint32_t)},
		{ShaderUniformType::Bool, sizeof(int32_t)},

		{ShaderUniformType::Vec2, sizeof(glm::vec2)},
		{ShaderUniformType::Vec3, sizeof(glm::vec3)},
		{ShaderUniformType::Vec4, sizeof(glm::vec4)},
		{ShaderUniformType::BVec2, sizeof(glm::ivec2)},
		{ShaderUniformType::BVec3, sizeof(glm::ivec3)},
		{ShaderUniformType::BVec4, sizeof(glm::ivec4)},
		{ShaderUniformType::DVec2, sizeof(glm::dvec2)},
		{ShaderUniformType::DVec3, sizeof(glm::dvec3)},
		{ShaderUniformType::DVec4, sizeof(glm::dvec4)},
		{ShaderUniformType::IVec2, sizeof(glm::ivec2)},
		{ShaderUniformType::IVec3, sizeof(glm::ivec3)},
		{ShaderUniformType::IVec4, sizeof(glm::ivec4)},
		{ShaderUniformType::UVec2, sizeof(glm::uvec2)},
		{ShaderUniformType::UVec3, sizeof(glm::uvec3)},
		{ShaderUniformType::UVec4, sizeof(glm::uvec4)},

		{ShaderUniformType::Mat2, sizeof(glm::mat2)},
		{ShaderUniformType::Mat3, sizeof(glm::mat3)},
		{ShaderUniformType::Mat4, sizeof(glm::mat4)},
		{ShaderUniformType::Mat2x3, sizeof(glm::mat2x3)},
		{ShaderUniformType::Mat2x4, sizeof(glm::mat2x4)},
		{ShaderUniformType::Mat3x2, sizeof(glm::mat3x2)},
		{ShaderUniformType::Mat3x4, sizeof(glm::mat3x4)},
		{ShaderUniformType::Mat4x2, sizeof(glm::mat4x2)},
		{ShaderUniformType::Mat4x3, sizeof(glm::mat4x3)},
		{ShaderUniformType::DMat2, sizeof(glm::dmat2)},
		{ShaderUniformType::DMat3, sizeof(glm::dmat3)},
		{ShaderUniformType::DMat4, sizeof(glm::dmat4)},
		{ShaderUniformType::DMat2x3, sizeof(glm::dmat2x3)},
		{ShaderUniformType::DMat2x4, sizeof(glm::dmat2x4)},
		{ShaderUniformType::DMat3x2, sizeof(glm::dmat3x2)},
		{ShaderUniformType::DMat3x4, sizeof(glm::dmat3x4)},
		{ShaderUniformType::DMat4x2, sizeof(glm::dmat4x2)},
		{ShaderUniformType::DMat4x3, sizeof(glm::dmat4x3)},
	};
}